[gd_resource type="VisualShader" load_steps=16 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.5, -0.5, 0 ) ]

[sub_resource type="VisualShaderNodeVectorOp" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id=3]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=15]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=16]
uniform_name = "DistortFactor"

[sub_resource type="VisualShaderNodeTexture" id=17]
source = 1

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTextureUniform" id=8]
output_port_for_preview = 0
uniform_name = "Heat_Text"

[sub_resource type="VisualShaderNodeScalarUniform" id=9]
uniform_name = "RiseFactor"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
output_port_for_preview = 0
operator = 1

[resource]
code = "shader_type canvas_item;
uniform float RiseFactor;
uniform sampler2D Heat_Text;
uniform float DistortFactor;



void vertex() {
// Output:0

}

void fragment() {
// Input:18
	vec3 n_out18p0;
	n_out18p0 = vec3(SCREEN_UV,0.0);

// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// VectorDecompose:3
	float n_out3p0;
	float n_out3p1;
	float n_out3p2;
	n_out3p0 = n_out2p0.x;
	n_out3p1 = n_out2p0.y;
	n_out3p2 = n_out2p0.z;

// ScalarUniform:6
	float n_out6p0;
	n_out6p0 = RiseFactor;

// Input:8
	float n_out8p0;
	n_out8p0 = TIME;

// ScalarOp:7
	float n_out7p0;
	n_out7p0 = n_out6p0 * n_out8p0;

// ScalarOp:9
	float n_out9p0;
	n_out9p0 = n_out3p1 - n_out7p0;

// VectorCompose:4
	float n_in4p2 = 0.00000;
	vec3 n_out4p0;
	n_out4p0 = vec3( n_out3p0 , n_out9p0 , n_in4p2 );

// TextureUniform:5
	vec3 n_out5p0;
	float n_out5p1;
	{
		vec4 n_tex_read = texture( Heat_Text , n_out4p0.xy );
		n_out5p0 = n_tex_read.rgb;
		n_out5p1 = n_tex_read.a;
	}

// VectorOp:10
	vec3 n_in10p1 = vec3(-0.50000,-0.50000,0.00000);
	vec3 n_out10p0;
	n_out10p0 = n_out5p0 + n_in10p1;

// VectorOp:12
	vec3 n_out12p0;
	n_out12p0 = n_out10p0 * vec3(n_out3p1);

// ScalarUniform:15
	float n_out15p0;
	n_out15p0 = DistortFactor;

// VectorOp:14
	vec3 n_out14p0;
	n_out14p0 = n_out12p0 * vec3(n_out15p0);

// VectorOp:11
	vec3 n_out11p0;
	n_out11p0 = n_out18p0 + n_out14p0;

// Texture:17
	vec3 n_out17p0;
	float n_out17p1;
	{
		vec4 _tex_read = textureLod( SCREEN_TEXTURE , n_out11p0.xy, 0.0 );
		n_out17p0 = _tex_read.rgb;
		n_out17p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out17p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 625.6, -194.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 2040, 20 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -400, 280 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -180, 300 )
nodes/fragment/4/node = SubResource( 7 )
nodes/fragment/4/position = Vector2( 280, 240 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( 540, 80 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( -420, 420 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( -180, 440 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( -420, 520 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 80, 420 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 760, 240 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1500, 0 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 980, 560 )
nodes/fragment/14/node = SubResource( 15 )
nodes/fragment/14/position = Vector2( 1220, 360 )
nodes/fragment/15/node = SubResource( 16 )
nodes/fragment/15/position = Vector2( 960, 400 )
nodes/fragment/17/node = SubResource( 17 )
nodes/fragment/17/position = Vector2( 1780, 0 )
nodes/fragment/18/node = SubResource( 18 )
nodes/fragment/18/position = Vector2( 1200, 20 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 0, 8, 0, 7, 1, 2, 0, 3, 0, 7, 0, 9, 1, 3, 1, 9, 0, 3, 0, 4, 0, 9, 0, 4, 1, 4, 0, 5, 0, 5, 0, 10, 0, 3, 1, 12, 1, 10, 0, 12, 0, 15, 0, 14, 1, 14, 0, 11, 1, 12, 0, 14, 0, 11, 0, 17, 0, 17, 0, 0, 0, 18, 0, 11, 0 )
